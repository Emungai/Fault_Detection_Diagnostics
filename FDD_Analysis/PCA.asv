%% Get Data
%% setting up variables
fivelink=1;
digit=0;
noise=0; %use noisy data
if fivelink
    walk=1;
    stand=0;
elseif digit
    walk=0;
    stand=1;
end
%% loading Data if necessary
load_info.fivelink=1;
load_info.digit=0;
load_info.noise=0;
[FDD_info, FDD_info_analyze]=utils.load_data(load_info);

%need to run this on matlab 2018 or recent
X=normalize(FDD_info_analyze);

%% RPCA, PCA
[L_O,S_O]=RPCA(X);
[V,Score,lmd]=pca(L_O);

var_PCA=[];
for j=1:length(lmd)
    if j>1
        var_PCA(j)=lmd(j)+var_PCA(j-1);
    else
        var_PCA(j)=lmd(j);
    end
end
var_PCA=var_PCA./sum(lmd);


fprintf('PCA calc done') ;

%% plot
fprintf('\n starting plot') ;
%plotting variables
plotInfo.X=X;
plotInfo.PCA_info_full=PCA_info_full;
plotInfo.escapeTime=1; %plot wrt escape time (# of steps before failure)
plotInfo.ramp=0; %plot wrt time
if plotInfo.ramp
    colorNum=9;
    axisVec=[0 round(PCA_info_full(end,end-1))];
elseif plotInfo.escapeTime
    colorNum=PCA_info_full(1,end-2)+1;
    axisVec=[-PCA_info_full(1,end-2) 0];
else
    colorNum=7;
    axisVec=[1 k];
end
plotInfo.colorNum=colorNum;
plotInfo.V=V;
plotInfo.axisVec=axisVec;
plotInfo.titlePlot='All RPCA-PCA(L)-X';

FullData=plot.plotPCA(plotInfo);
if plot_LminusS
    if fivelink
        feat={'lCoM x', 'lstance x', 'v sw x', 'v sw z', ...
              'p sw z', 'torso pitch', 'CoM height', ...
              'p st z'}
    end
    plotInfo.L=L_O;
    plotInfo.S=S_O;
    plotInfo.t= FDD_info(:,end-1);
    plotInfo.task= FDD_info(:,end-2);
    plotInfo.feat=feat;
    
end

